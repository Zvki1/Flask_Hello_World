name: Aper√ßu Temporaire

on: [push]

jobs:
  preview:
    runs-on: ubuntu-latest

    steps:
    - name: Cloner le d√©p√¥t
      uses: actions/checkout@v3

    - name: Installer Ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok

    - name: Configurer Ngrok avec l'authtoken
      run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Construire l‚Äôimage Docker
      run: docker build -t flask-ngrok .

    - name: Lancer le conteneur Flask
      run: |
        docker run -d -p 5000:5000 --name flask-app flask-ngrok
        echo "üïí Attente que Flask d√©marre..."
        for i in {1..10}; do
          sleep 2
          if curl -s http://localhost:5000 > /dev/null; then
            echo "‚úÖ Serveur Flask pr√™t"
            break
          fi
        done

    - name: Lancer Ngrok et afficher lURL
      run: |
        # ngrok http 5000 > ngrok.log &
        # sleep 5
        # echo "URL Temporaire :"
        # curl -s http://localhost:5000/api/tunnels | grep -o 'https://[0-9a-z]*\.ngrok.io'
        ngrok http 5000 --log=stdout &
        sleep 10

    - name: Installer Pytest et lancer les tests
      run: |
        pip install pytest requests
        export API_URL=${{ steps.ngrok.outputs.url }}
        pytest tests/

    - name: Afficher l‚ÄôURL si les tests passent
      if: success()
      run: |
        echo "‚úÖ Tous les tests ont r√©ussi !"
        echo "üîó Lien d'acc√®s temporaire : ${{ steps.ngrok.outputs.url }}"

    - name: √âchec des tests
      if: failure()
      run: |
        echo "‚ùå Les tests ont √©chou√©. Aucune URL ne sera affich√©e."
